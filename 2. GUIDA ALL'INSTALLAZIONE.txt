Guida installazione app (testata con sistema windows+linux WSL)
L'applicazione comprende 4 diversi microservizi che vengono spiegati nel primo readme.


*** INSTALLAZIONE DEI REQUISITI PYTHON, SCARICARE SUL PROPRIO COMPUTER SE NON PRESENTE ***
nella cartella del progetto digitare da terminale:
pip install requirements.txt


*** INSTALLAZIONE DI HYPERLEDGER FABRIC ***
Per connettersi ai server c'è necessità di installare linux (WSL, il programma è stato testato su ubuntu 22.04).
una volta installato navigare nella directory home e installare i prerequisiti di hyperledger fabric la cui guida è presente qua:
https://hyperledger-fabric.readthedocs.io/en/latest/prereqs.html

una volta fatto ciò bisogna installare fabric e fabric samples:

mkdir -p $HOME/go/src/github.com/Filiera360
cd $HOME/go/src/github.com/Filiera360

curl -sSLO https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh && chmod +x install-fabric.sh
./install-fabric.sh


*** PREPARAZIONE DELL'AMBIENTE LINUX CON LE CARTELLE NECESSARIE ***
Bisogna copiare la cartella "myapp" e la cartella "mychaincode" all'interno della WSL, nella cartella fabric-samples appena creata:

cp -v /mnt/c/Users/***TUO USERNAME WINDOWS***/Desktop/Filiera360/linux_files/myapp go/src/github.com/Filiera360/fabric-samples
cp -v /mnt/c/Users/***TUO USERNAME WINDOWS***/Desktop/Filiera360/linux_files/mychaincode go/src/github.com/Filiera360/fabric-samples

Il percorso di myapp dovrebbe essere una cosa simile a questa:
\\wsl.localhost\Ubuntu-22.04\home\user\go\src\github.com\Filiera360\fabric-samples\myapp
dopo aver copiato le cartelle, posizionarsi all'interno della cartella myapp ed eseguire il seguente comando:

npm install

ripetere l'operazione anche per la cartella mychaincode.


*** CREAZIONE DELLA RETE HYPERLEDGER ***
posizionarsi all'interno della cartella test-network e eseguire i seguenti comandi:

./network.sh down

successivamente creare un canale tramite il seguente comando:

./network.sh up createChannel -c mychannel -ca

infine, si fa il deployment del chaincode copiato poco fa, per le organizzazioni org0 e org1 presenti all'interno del fabric-samples

./network.sh deployCC -ccn basic -ccp ../mychaincode/ -ccl javascript

ora il chaincode sarà disponibile e verrà approvato da entrambe le organizzazioni. 


*** AVVIO DEL MIDDLEWARE NODE SU WSL ****
Ora si potrà lasciare in esecuzione il server della blockchain, e bisogna avviare il server che permette di interfacciarsi con il chaincode, quindi tornare alla cartella myapp sempre su WSL, ed eseguire il seguente comando:

npm start

questo avvierà il server che farà logging delle transazioni


*** AVVIO DEL FRONTEND E DEL BACKEND FLASK ***
spostarsi nella cartella product tracking e avviare: npm start
spostarsi nella cartella principale contenente app.py e avviare: flask run




// FACOLTATIVO: PER CIMENTARSI NEL TEST E AMPLIAMENTO DEL CHATBOT SI POSSONO SEGUIRE QUESTI PASSAGGI
App.py ha bisogno di Ollama https://ollama.com/download, una volta scaricato bisogna scaricare uno dei LLM che si vogliono utilizzare:
consiglio: llama3 o gemma2.
ollama run llama3
questo comando scaricherà il modello llama3, dopodichè bisogna installare i requirements, tramite:
pip install requirements.txt
questo comando dovrebbe installare langchain_commmunity, flask e requests. Nel caso non funzioni importare singolarmente ciascuno.
Una volta eseguito ciò si può già provare a lanciare il programma app.py, che una volta scannerizzato il qr code restituirà errore in quanto
non potrà connettersi a nessun server.


